<!DOCTYPE html>
<html>
<head>
    <title>Jasmine Spec Runner</title>

    <script type="text/javascript">
        // some global variables
        var app_context = null;
    </script>
    
    <script type="text/javascript" src="<%= options.server %>/apps/<%= options.sdk %>/sdk-debug.js"></script>
    
    <% with (scripts) { %>
    <% [].concat(jasmine, vendor, reporters).forEach(function(script){ %>
    <script src="<%= script %>"></script>
    <% }) %>
    <% }; %>
    
    <% with (scripts) { %>
    <% [].concat(helpers, specs).forEach(function(script){ %>
    <script src="<%= script %>"></script>
    <% }) %>
    <% }; %>
    
        
    <script type="text/javascript">
        //Redefine onReady - bug in phantomjs such that onload isn't triggered for <link>, so the default Rally onReady won't work consistently
        /*
        Rally.sdk.Bootstrapper.onReady = function (onready) {
            if (!Rally.environment) {
                Ext.create('Rally.sdk.env.Global').setup();
            }
            onready();
        };
        */
                
        Rally.onReady(function () {
            var token = '<%= options.auth.username %>:<%= options.auth.password %>';
            var auth_string = 'Basic ' + Base64.encode(token);
            console.log(auth_string);
        
            var url = '<%= options.server %>/slm/webservice/v2.0/workspace?query=&pagesize=1'
            Ext.Ajax.useDefaultXhrHeader = false;
            Ext.Ajax.withCredentials=true;
            
            Ext.Ajax.request({
                url: url,
                method: 'GET',
                headers: {
                    'Authorization': auth_string
                },
                success: function(response){
                    Rally.loadScripts(<%= JSON.stringify(options.js_files) %>,
                    function() {
                        console.log('loaded scripts');
                        Ext.define('TestApp',{
                            extend: 'Rally.app.App',
                            componentCls: 'app',
                            launch: function() {
                                console.log("launch");
                                var jasmineEnv = jasmine.getEnv();
    
                                jasmineEnv.updateInterval = 1000;
                                var htmlReporter = new jasmine.HtmlReporter();
                                jasmineEnv.addReporter(htmlReporter);
    
                                jasmineEnv.specFilter = function (spec) {
                                    return htmlReporter.specFilter(spec);
                                };
    
                                jasmineEnv.execute();
                            }
                        });
                        console.log('about to launch');
                        Rally.launchApp('TestApp', {
                            name: 'Test Accessible App'
                        });
                    }, true);
                }
            });
        });
        
    </script>
    <link rel="stylesheet" type="text/css" href="src/style/app.css">
    
    <link rel="stylesheet" type="text/css" href=".grunt/grunt-contrib-jasmine/jasmine.css">
</head>
<body></body>
</html>